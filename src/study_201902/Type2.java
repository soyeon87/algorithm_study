/*
문제 설명
1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.
가.입력된 수가 짝수라면 2로 나눕니다.
나.입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
다.결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요.

제한 사항
입력된 수, num은 1 이상 8000000 미만인 정수입니다.

입출력 예
n	result
6	8
16	4
626331	-1

입출력 예 설명
입출력 예 #1
문제의 설명과 같습니다.
입출력 예 #2
16 -> 8 -> 4 -> 2 -> 1 이되어 총 4번만에 1이 됩니다.
입출력 예 #3
626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.
*/

package study_201902;

public class Type2 {

	public static void main(String[] args) {
		System.out.println(solution(626331));
	}

	public static int solution(int num) {
		int answer = 0;
		while(num != 1){
			if(num % 2 == 0){
				num = num / 2;
			}else{
				num = num*3 +1;
			}
			answer++;
			if(answer > 500){
				answer = -1;
				break;
			}
		}
		return answer;

		/*for (int i = 0; i < 500; i++) {
			if (n == 1)
				return i;
			n = (n % 2 == 0) ? n / 2 : n * 3 + 1;
		}
		return -1;*/
	}
}
